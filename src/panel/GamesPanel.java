/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package panel;

import gui.Dashboard;
import java.awt.Color;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Database;

/**
 *
 * @author janin
 */
public class GamesPanel extends javax.swing.JPanel {

    String username = Dashboard.getUsername();

    /**
     * Creates new form DashboardPanel
     */
    public GamesPanel() {
        initComponents();
        loadGames();
    }

    private void loadGames() {
        try {
            ResultSet resultSet = Database.executeSearch("SELECT * FROM `game`");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (resultSet.next()) {
                Vector<String> vector = new Vector<>();
                vector.add(resultSet.getString("name"));
                vector.add(resultSet.getString("genre"));
                vector.add(resultSet.getString("publisher"));
                vector.add(resultSet.getString("playtime"));
                vector.add(resultSet.getString("year"));

                dtm.addRow(vector);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Game", "Gener", "Publisher", "Playtime", "Year"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add to Whishlist");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 210, 11), 3));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Beaten");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 210, 11), 3));
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Playing");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 210, 11), 3));
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton3MouseExited(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("On Pause");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 210, 11), 3));
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4MouseExited(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 0, 0));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Quit");
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 210, 11), 3));
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton9MouseExited(evt);
            }
        });
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Search");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Search by Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Search by Genre");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Shooting", "Fighting", "Action", "Adventure" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Search by Publisher");

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });

        jButton5.setText("🔄");
        jButton5.setBorder(null);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jButton5))
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        jButton1.setBackground(Color.decode("#E5D20B"));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        jButton1.setBackground(Color.black);
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int row = jTable1.getSelectedRow();
        String name = String.valueOf(jTable1.getValueAt(row, 0));

        try {
            ResultSet resultSet = Database.executeSearch("SELECT * FROM `mygame` INNER JOIN `user` ON `user`.`username` = `mygame`.`user_username` INNER JOIN `type` ON `mygame`.`type_id` = `type`.`id` WHERE `mygame`.`name` = '" + name + "' AND `mygame`.`user_username` = '" + username + "' AND `mygame`.`type_id` = '5' ");

            if (resultSet.next()) {
                JOptionPane.showMessageDialog(this, "Game is already in your wishlist", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {

                ResultSet resultSet2 = Database.executeSearch("SELECT * FROM `mygame` INNER JOIN `user` ON `user`.`username` = `mygame`.`user_username` INNER JOIN `type` ON `mygame`.`type_id` = `type`.`id` WHERE `mygame`.`name` = '" + name + "' AND `mygame`.`user_username` = '" + username + "' AND `mygame`.`type_id` != '5' ");

                ResultSet resultSet1 = Database.executeSearch("SELECT * FROM `game` WHERE `name` = '" + name + "'");
                if (resultSet2.next()) {
                    Database.executeIUD("UPDATE `mygame` SET `type_id` = '5' WHERE `user_username` = '" + username + "' AND `name` = '" + name + "'");
                    JOptionPane.showMessageDialog(this, "Added to wishlist", "Success", JOptionPane.INFORMATION_MESSAGE);

                } else if (resultSet1.next()) {

                    String genre = resultSet1.getString("genre");
                    String publisher = resultSet1.getString("publisher");
                    int year = resultSet1.getInt("year");
                    String description = resultSet1.getString("description");
                    String playtime = resultSet1.getString("playtime");

                    Database.executeIUD("INSERT INTO `mygame` (`name`, `genre`, `publisher`, `year`, `description`, `type_id`, `playtime`, `user_username`) "
                            + "VALUES ('" + name + "', '" + genre + "', '" + publisher + "', '" + year + "', '" + description + "', '5', '" + playtime + "', '" + username + "')");

                    JOptionPane.showMessageDialog(this, "Added to wishlist2", "Success", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(this, "Unknown error occured", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        loadGames();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseExited

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int row = jTable1.getSelectedRow();
        String name = String.valueOf(jTable1.getValueAt(row, 0));

        try {
            ResultSet resultSet = Database.executeSearch("SELECT * FROM `mygame` INNER JOIN `user` ON `user`.`username` = `mygame`.`user_username` INNER JOIN `type` ON `mygame`.`type_id` = `type`.`id` WHERE `mygame`.`name` = '" + name + "' AND `mygame`.`user_username` = '" + username + "' AND `mygame`.`type_id` = '1' ");

            if (resultSet.next()) {
                JOptionPane.showMessageDialog(this, "Game already added to beaten", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {

                ResultSet resultSet2 = Database.executeSearch("SELECT * FROM `mygame` INNER JOIN `user` ON `user`.`username` = `mygame`.`user_username` INNER JOIN `type` ON `mygame`.`type_id` = `type`.`id` WHERE `mygame`.`name` = '" + name + "' AND `mygame`.`user_username` = '" + username + "' AND `mygame`.`type_id` != '1' ");

                ResultSet resultSet1 = Database.executeSearch("SELECT * FROM `game` WHERE `name` = '" + name + "'");
                if (resultSet2.next()) {
                    Database.executeIUD("UPDATE `mygame` SET `type_id` = '1' WHERE `user_username` = '" + username + "' AND `name` = '" + name + "'");
                    JOptionPane.showMessageDialog(this, "Added to Beaten", "Success", JOptionPane.INFORMATION_MESSAGE);

                } else if (resultSet1.next()) {

                    String genre = resultSet1.getString("genre");
                    String publisher = resultSet1.getString("publisher");
                    int year = resultSet1.getInt("year");
                    String description = resultSet1.getString("description");
                    String playtime = resultSet1.getString("playtime");

                    Database.executeIUD("INSERT INTO `mygame` (`name`, `genre`, `publisher`, `year`, `description`, `type_id`, `playtime`, `user_username`) "
                            + "VALUES ('" + name + "', '" + genre + "', '" + publisher + "', '" + year + "', '" + description + "', '1', '" + playtime + "', '" + username + "')");

                    JOptionPane.showMessageDialog(this, "Added to Beaten", "Success", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(this, "Unknown error occured", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            loadGames();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3MouseEntered

    private void jButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3MouseExited

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int row = jTable1.getSelectedRow();
        String name = String.valueOf(jTable1.getValueAt(row, 0));

        try {
            ResultSet resultSet = Database.executeSearch("SELECT * FROM `mygame` INNER JOIN `user` ON `user`.`username` = `mygame`.`user_username` INNER JOIN `type` ON `mygame`.`type_id` = `type`.`id` WHERE `mygame`.`name` = '" + name + "' AND `mygame`.`user_username` = '" + username + "' AND `mygame`.`type_id` = '2' ");

            if (resultSet.next()) {
                JOptionPane.showMessageDialog(this, "Game is already in Playing", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {

                ResultSet resultSet2 = Database.executeSearch("SELECT * FROM `mygame` INNER JOIN `user` ON `user`.`username` = `mygame`.`user_username` INNER JOIN `type` ON `mygame`.`type_id` = `type`.`id` WHERE `mygame`.`name` = '" + name + "' AND `mygame`.`user_username` = '" + username + "' AND `mygame`.`type_id` != '2' ");

                ResultSet resultSet1 = Database.executeSearch("SELECT * FROM `game` WHERE `name` = '" + name + "'");
                if (resultSet2.next()) {
                    Database.executeIUD("UPDATE `mygame` SET `type_id` = '2' WHERE `user_username` = '" + username + "' AND `name` = '" + name + "'");
                    JOptionPane.showMessageDialog(this, "Added to Playing", "Success", JOptionPane.INFORMATION_MESSAGE);

                } else if (resultSet1.next()) {

                    String genre = resultSet1.getString("genre");
                    String publisher = resultSet1.getString("publisher");
                    int year = resultSet1.getInt("year");
                    String description = resultSet1.getString("description");
                    String playtime = resultSet1.getString("playtime");

                    Database.executeIUD("INSERT INTO `mygame` (`name`, `genre`, `publisher`, `year`, `description`, `type_id`, `playtime`, `user_username`) "
                            + "VALUES ('" + name + "', '" + genre + "', '" + publisher + "', '" + year + "', '" + description + "', '2', '" + playtime + "', '" + username + "')");

                    JOptionPane.showMessageDialog(this, "Added to Playing", "Success", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(this, "Unknown error occured", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        loadGames();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4MouseEntered

    private void jButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4MouseExited

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int row = jTable1.getSelectedRow();
        String name = String.valueOf(jTable1.getValueAt(row, 0));

        try {
            ResultSet resultSet = Database.executeSearch("SELECT * FROM `mygame` INNER JOIN `user` ON `user`.`username` = `mygame`.`user_username` INNER JOIN `type` ON `mygame`.`type_id` = `type`.`id` WHERE `mygame`.`name` = '" + name + "' AND `mygame`.`user_username` = '" + username + "' AND `mygame`.`type_id` = '3' ");

            if (resultSet.next()) {
                JOptionPane.showMessageDialog(this, "Game is already in On Pause", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {

                ResultSet resultSet2 = Database.executeSearch("SELECT * FROM `mygame` INNER JOIN `user` ON `user`.`username` = `mygame`.`user_username` INNER JOIN `type` ON `mygame`.`type_id` = `type`.`id` WHERE `mygame`.`name` = '" + name + "' AND `mygame`.`user_username` = '" + username + "' AND `mygame`.`type_id` != '3' ");

                ResultSet resultSet1 = Database.executeSearch("SELECT * FROM `game` WHERE `name` = '" + name + "'");
                if (resultSet2.next()) {
                    Database.executeIUD("UPDATE `mygame` SET `type_id` = '3' WHERE `user_username` = '" + username + "' AND `name` = '" + name + "'");
                    JOptionPane.showMessageDialog(this, "Added to On Pause", "Success", JOptionPane.INFORMATION_MESSAGE);

                } else if (resultSet1.next()) {

                    String genre = resultSet1.getString("genre");
                    String publisher = resultSet1.getString("publisher");
                    int year = resultSet1.getInt("year");
                    String description = resultSet1.getString("description");
                    String playtime = resultSet1.getString("playtime");

                    Database.executeIUD("INSERT INTO `mygame` (`name`, `genre`, `publisher`, `year`, `description`, `type_id`, `playtime`, `user_username`) "
                            + "VALUES ('" + name + "', '" + genre + "', '" + publisher + "', '" + year + "', '" + description + "', '3', '" + playtime + "', '" + username + "')");

                    JOptionPane.showMessageDialog(this, "Added to On Pause", "Success", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(this, "Unknown error occured", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        loadGames();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9MouseEntered

    private void jButton9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9MouseExited

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int row = jTable1.getSelectedRow();
        String name = String.valueOf(jTable1.getValueAt(row, 0));

        try {
            ResultSet resultSet = Database.executeSearch("SELECT * FROM `mygame` INNER JOIN `user` ON `user`.`username` = `mygame`.`user_username` INNER JOIN `type` ON `mygame`.`type_id` = `type`.`id` WHERE `mygame`.`name` = '" + name + "' AND `mygame`.`user_username` = '" + username + "' AND `mygame`.`type_id` = '4' ");

            if (resultSet.next()) {
                JOptionPane.showMessageDialog(this, "Game is already in Quit", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {

                ResultSet resultSet2 = Database.executeSearch("SELECT * FROM `mygame` INNER JOIN `user` ON `user`.`username` = `mygame`.`user_username` INNER JOIN `type` ON `mygame`.`type_id` = `type`.`id` WHERE `mygame`.`name` = '" + name + "' AND `mygame`.`user_username` = '" + username + "' AND `mygame`.`type_id` != '4' ");

                ResultSet resultSet1 = Database.executeSearch("SELECT * FROM `game` WHERE `name` = '" + name + "'");
                if (resultSet2.next()) {
                    Database.executeIUD("UPDATE `mygame` SET `type_id` = '4' WHERE `user_username` = '" + username + "' AND `name` = '" + name + "'");
                    JOptionPane.showMessageDialog(this, "Added to Quit", "Success", JOptionPane.INFORMATION_MESSAGE);

                } else if (resultSet1.next()) {

                    String genre = resultSet1.getString("genre");
                    String publisher = resultSet1.getString("publisher");
                    int year = resultSet1.getInt("year");
                    String description = resultSet1.getString("description");
                    String playtime = resultSet1.getString("playtime");

                    Database.executeIUD("INSERT INTO `mygame` (`name`, `genre`, `publisher`, `year`, `description`, `type_id`, `playtime`, `user_username`) "
                            + "VALUES ('" + name + "', '" + genre + "', '" + publisher + "', '" + year + "', '" + description + "', '4', '" + playtime + "', '" + username + "')");

                    JOptionPane.showMessageDialog(this, "Added to Quit", "Success", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(this, "Unknown error occured", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        loadGames();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        loadGames();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
       String pName = jTextField2.getText();
        try {
            ResultSet resultSet = Database.executeSearch("SELECT * FROM `game` WHERE `publisher` = '" + pName + "'");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (resultSet.next()) {
                Vector<String> vector = new Vector<>();
                vector.add(resultSet.getString("name"));
                vector.add(resultSet.getString("genre"));
                vector.add(resultSet.getString("publisher"));
                vector.add(resultSet.getString("playtime"));
                vector.add(resultSet.getString("year"));

                dtm.addRow(vector);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
       String name = jTextField1.getText();
        try {
            ResultSet resultSet = Database.executeSearch("SELECT * FROM `game` WHERE `name` = '" + name + "'");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (resultSet.next()) {
                Vector<String> vector = new Vector<>();
                vector.add(resultSet.getString("name"));
                vector.add(resultSet.getString("genre"));
                vector.add(resultSet.getString("publisher"));
                vector.add(resultSet.getString("playtime"));
                vector.add(resultSet.getString("year"));

                dtm.addRow(vector);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        String name = String.valueOf(jComboBox1.getSelectedItem());
        try {
            ResultSet resultSet = Database.executeSearch("SELECT * FROM `game` WHERE `name` = '" + name + "'");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (resultSet.next()) {
                Vector<String> vector = new Vector<>();
                vector.add(resultSet.getString("name"));
                vector.add(resultSet.getString("genre"));
                vector.add(resultSet.getString("publisher"));
                vector.add(resultSet.getString("playtime"));
                vector.add(resultSet.getString("year"));

                dtm.addRow(vector);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
